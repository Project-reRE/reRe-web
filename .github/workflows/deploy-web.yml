name: Deploy Web to Amazon EC2

on:
  push:
    branches:
      - main
      - development
    paths:
      - 'apps/web/**'
      - '.github/workflows/deploy-web.yml'
  pull_request:
    branches:
      - main
      - development
    paths:
      - 'apps/web/**'

jobs:
  build:
    name: Build and Deploy Web
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22]
        pnpm-version: [9]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ matrix.pnpm-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build and push Docker image
        run: |
          export VERSION=$(node -p "require('./apps/web/package.json').version")
          docker build -t ${{ secrets.DOCKER_REPO_WEB }}:$VERSION -f apps/web/Dockerfile .
          docker tag ${{ secrets.DOCKER_REPO_WEB }} ${{ secrets.DOCKER_REPO_WEB }}:$VERSION
          docker push ${{ secrets.DOCKER_REPO_WEB }}:$VERSION

      - name: Set environment for production
        if: github.ref == 'refs/heads/main'
        run: echo "ENV_FILE=.env.production" >> $GITHUB_ENV

      - name: Set environment for development
        if: github.ref == 'refs/heads/development'
        run: echo "ENV_FILE=.env.development" >> $GITHUB_ENV

      - name: SSH to EC2 and deploy Web
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            export VERSION=$(node -p "require('./package.json').version")
            docker pull ${{ secrets.DOCKER_REPO_WEB }}:$VERSION
            cd /path/to/your/project  # 프로젝트 루트로 이동
            docker-compose --env-file $ENV_FILE up -d
            docker restart nginx  # Nginx 컨테이너를 재시작하여 새로운 설정 반영
